steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/mythic-beanbag-463309-e9/myapp:$SHORT_SHA', '.']

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/mythic-beanbag-463309-e9/myapp:$SHORT_SHA']

  # Step 3.5: Tag pushed image as 'latest'
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container', 'images', 'add-tag',
        'gcr.io/mythic-beanbag-463309-e9/myapp:$SHORT_SHA',
        'gcr.io/mythic-beanbag-463309-e9/myapp:latest',
        '--quiet'
      ]

  # Step 4: Replace placeholders in deployment.yaml
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        sed -i "s|\$$PROJECT_ID|mythic-beanbag-463309-e9|g" k8s/deployment.yaml
        sed -i "s|\$$SHORT_SHA|$SHORT_SHA|g" k8s/deployment.yaml
  # Step 5: Authenticate to GKE (get credentials)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'container', 'clusters', 'get-credentials',
        'vamsi-cluster1',
        '--zone', 'asia-east1-a',
        '--project', 'mythic-beanbag-463309-e9'
      ]

  # Step 6: Deploy to GKE using kubectl
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        kubectl apply -f k8s/

images:
  - 'gcr.io/mythic-beanbag-463309-e9/myapp:$SHORT_SHA'


options:
  logging: CLOUD_LOGGING_ONLY
